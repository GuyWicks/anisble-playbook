{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Ansible Playbook on Github Pages Scripts and recipes for deploying cloud infrastructure via Ansible and Terraform (with a bit of shell scripting just for fun) Currently based on the Oracle Cloud Free Tier services. In the future we'll try to get examples on some other cloud platforms. Note: This documentation is very much work in progress. Even setting up mkdocs in a way I like is still ongoing. Pages WILL move. Repository structure Terraform - Provision the infrastructure Post provisioning - Initial server OS setup scripts Ansible - Software configuration Docker - Docker container scripts Current status Terraform Phase: Terraform basic configuration (DF) Implement variables (DF) Refactoring (DF) Test on other providers (GW) Documentation (DF/GW) Implement post provision scripting (DF) Build Phase: Post Provisioning Networking IPTABLES Native software NGINX install NGINX base config Docker Not started work on this yet. ToDo On the 'welcome page', get the subsections to work.","title":"Welcome"},{"location":"#welcome","text":"Ansible Playbook on Github Pages Scripts and recipes for deploying cloud infrastructure via Ansible and Terraform (with a bit of shell scripting just for fun) Currently based on the Oracle Cloud Free Tier services. In the future we'll try to get examples on some other cloud platforms. Note: This documentation is very much work in progress. Even setting up mkdocs in a way I like is still ongoing. Pages WILL move.","title":"Welcome"},{"location":"#repository-structure","text":"Terraform - Provision the infrastructure Post provisioning - Initial server OS setup scripts Ansible - Software configuration Docker - Docker container scripts","title":"Repository structure"},{"location":"#current-status","text":"","title":"Current status"},{"location":"#terraform-phase","text":"Terraform basic configuration (DF) Implement variables (DF) Refactoring (DF) Test on other providers (GW) Documentation (DF/GW) Implement post provision scripting (DF)","title":"Terraform Phase:"},{"location":"#build-phase-post-provisioning","text":"Networking IPTABLES Native software NGINX install NGINX base config","title":"Build Phase: Post Provisioning"},{"location":"#docker","text":"Not started work on this yet.","title":"Docker"},{"location":"#todo","text":"On the 'welcome page', get the subsections to work.","title":"ToDo"},{"location":"Ansible/","text":"Welcome to Ansible Check out Jeff Geerling 's content as a fantastic resource for Ansible We're certainly going to plagiarise it!","title":"Welcome to Ansible"},{"location":"Ansible/#welcome-to-ansible","text":"Check out Jeff Geerling 's content as a fantastic resource for Ansible We're certainly going to plagiarise it!","title":"Welcome to Ansible"},{"location":"Ansible/page2/","text":"page 2","title":"page 2"},{"location":"Ansible/page2/#page-2","text":"","title":"page 2"},{"location":"Docker/","text":"Welcome to Docker Lots of docker recipes to copy-paste into this area...","title":"Welcome to Docker"},{"location":"Docker/#welcome-to-docker","text":"Lots of docker recipes to copy-paste into this area...","title":"Welcome to Docker"},{"location":"Docker/page2/","text":"page 2","title":"page 2"},{"location":"Docker/page2/#page-2","text":"","title":"page 2"},{"location":"Post%20provisoning/","text":"Post provisioning scripts Work in progress. Check the Github repo for draft scripts.","title":"Post provisioning scripts"},{"location":"Post%20provisoning/#post-provisioning-scripts","text":"Work in progress. Check the Github repo for draft scripts.","title":"Post provisioning scripts"},{"location":"Post%20provisoning/page2/","text":"page 2","title":"page 2"},{"location":"Post%20provisoning/page2/#page-2","text":"","title":"page 2"},{"location":"Terraform/","text":"Server provisioning Work in progress. Check the Github repo for draft scripts.","title":"Server provisioning"},{"location":"Terraform/#server-provisioning","text":"Work in progress. Check the Github repo for draft scripts.","title":"Server provisioning"},{"location":"Terraform/page2/","text":"page 2","title":"page 2"},{"location":"Terraform/page2/#page-2","text":"","title":"page 2"},{"location":"mkdocs/","text":"mkdocs Instructions Documentation generated with mkdocs . This is a nice lightweight documentation website tool that takes your Markdown notes and converts them into good looking HTML pages that can be hosted on Github pages. I also use the mkdocs material theme for feature sites. I use the readthedocs theme for technical sites. Sadly it can't fix my rubbish content or spelling mistocks. Installation Full getting started instructions available on the mkdocs site. Shorthand: pipenv install mkdocs pipenv install mkdocs-material Build a site I found this the easiest way to incorporate mkdocs into an existing githib repository. cd my-repository pipenv run mkdocs new . pipenv run serve Default browser http://127.0.0.1:8000 Configure the site mkdocs.yml site_name : Ansible Playbook site_author : Guy Wicks repo_url : https://github.com/GuyWicks/ansible-playbook repo_name : GuyWicks/ansible-playbook copyright : Copyright &copy; 2022 Guy Wicks theme : name : material #name: mkdocs #name: readthedocs features : - content.code.annotate - navigation.instant #- navigation.tracking #- navigation.tabs icon : repo : fontawesome/brands/github #palette: # - scheme: default # toggle: # icon: material/toggle-switch-off-outline # name: Switch to dark mode # - scheme: slate # toggle: # icon: material/toggle-switch # name: Switch to light mode markdown_extensions : - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.snippets - pymdownx.superfences - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - tables - attr_list - def_list - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg Quick notes on Markdown # Page title Only one allowed. Place at top of the page. ## Sub headings These appear as links in the nav bar / table of contents ### Sub sections These appear as collapsable sub-nav or as indented items on the ToC *Italic* **Bold** [Label for page link](https://url.com) Push to Github pages pipenv run mkdocs gh-deploy Go to your Github repository, select 'settings' and click on the link 'Pages' under the 'Code and automation' section. From there, change the branch that Github uses to 'gh-deploy' It may take a minute or two for the Github build to complete and any caches to expire. Then browse to your Github pages site and notice all the tyops! Tips tbc","title":"mkdocs Instructions"},{"location":"mkdocs/#mkdocs-instructions","text":"Documentation generated with mkdocs . This is a nice lightweight documentation website tool that takes your Markdown notes and converts them into good looking HTML pages that can be hosted on Github pages. I also use the mkdocs material theme for feature sites. I use the readthedocs theme for technical sites. Sadly it can't fix my rubbish content or spelling mistocks.","title":"mkdocs Instructions"},{"location":"mkdocs/#installation","text":"Full getting started instructions available on the mkdocs site. Shorthand: pipenv install mkdocs pipenv install mkdocs-material","title":"Installation"},{"location":"mkdocs/#build-a-site","text":"I found this the easiest way to incorporate mkdocs into an existing githib repository. cd my-repository pipenv run mkdocs new . pipenv run serve Default browser http://127.0.0.1:8000","title":"Build a site"},{"location":"mkdocs/#configure-the-site","text":"mkdocs.yml site_name : Ansible Playbook site_author : Guy Wicks repo_url : https://github.com/GuyWicks/ansible-playbook repo_name : GuyWicks/ansible-playbook copyright : Copyright &copy; 2022 Guy Wicks theme : name : material #name: mkdocs #name: readthedocs features : - content.code.annotate - navigation.instant #- navigation.tracking #- navigation.tabs icon : repo : fontawesome/brands/github #palette: # - scheme: default # toggle: # icon: material/toggle-switch-off-outline # name: Switch to dark mode # - scheme: slate # toggle: # icon: material/toggle-switch # name: Switch to light mode markdown_extensions : - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.snippets - pymdownx.superfences - pymdownx.critic - pymdownx.caret - pymdownx.keys - pymdownx.mark - pymdownx.tilde - tables - attr_list - def_list - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg","title":"Configure the site"},{"location":"mkdocs/#quick-notes-on-markdown","text":"# Page title Only one allowed. Place at top of the page. ## Sub headings These appear as links in the nav bar / table of contents ### Sub sections These appear as collapsable sub-nav or as indented items on the ToC *Italic* **Bold** [Label for page link](https://url.com)","title":"Quick notes on Markdown"},{"location":"mkdocs/#push-to-github-pages","text":"pipenv run mkdocs gh-deploy Go to your Github repository, select 'settings' and click on the link 'Pages' under the 'Code and automation' section. From there, change the branch that Github uses to 'gh-deploy' It may take a minute or two for the Github build to complete and any caches to expire. Then browse to your Github pages site and notice all the tyops!","title":"Push to Github pages"},{"location":"mkdocs/#tips","text":"tbc","title":"Tips"},{"location":"mkdocs/playground/","text":"Markdown playground Code samples Python @requires_authorization ( roles = [ \"ADMIN\" ]) def somefunc ( param1 = '' , param2 = 0 ): r '''A docstring''' if param1 > param2 : # interesting print 'Gre \\' ater' return ( param2 - param1 + 1 + 0b10 l ) or None class SomeClass : pass >>> message = '''interpreter ... prompt''' bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bash #!/bin/bash echo hello Graphs and diagrams Not working yet... see insiders graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Emoji Tables Method Description GET Fetch resource PUT Update resource DELETE Delete resource Buttons Subscribe to our newsletter Subscribe to our newsletter Send","title":"Markdown playground"},{"location":"mkdocs/playground/#markdown-playground","text":"","title":"Markdown playground"},{"location":"mkdocs/playground/#code-samples","text":"Python @requires_authorization ( roles = [ \"ADMIN\" ]) def somefunc ( param1 = '' , param2 = 0 ): r '''A docstring''' if param1 > param2 : # interesting print 'Gre \\' ater' return ( param2 - param1 + 1 + 0b10 l ) or None class SomeClass : pass >>> message = '''interpreter ... prompt''' bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bash #!/bin/bash echo hello","title":"Code samples"},{"location":"mkdocs/playground/#graphs-and-diagrams","text":"Not working yet... see insiders graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Graphs and diagrams"},{"location":"mkdocs/playground/#emoji","text":"","title":"Emoji"},{"location":"mkdocs/playground/#tables","text":"Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Tables"},{"location":"mkdocs/playground/#buttons","text":"Subscribe to our newsletter Subscribe to our newsletter Send","title":"Buttons"}]}