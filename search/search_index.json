{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Scripts and recepies for deploying cloud infrastructure via Ansible and Terraform (with a bit of shell scripting just for fun) Currently based on the Oracle Cloud Free Tier services. Repository structure Terraform - Provision the infrastructure PreBuild - Initial server OS setup scripts Ansible - Software configuration Docker - Docker container scripts Current status Terraform Phase: Terraform basic configuration (DF) Implemenr variables (DF) Refactoring (DF) Test on other providers (GW) Documentation (DF/GW) Implement post provision scripting (DF) Build Phase: Networking IPTABLES Praesent sed risus massa Native software NGINX install NGINX base config","title":"Welcome"},{"location":"#welcome","text":"Scripts and recepies for deploying cloud infrastructure via Ansible and Terraform (with a bit of shell scripting just for fun) Currently based on the Oracle Cloud Free Tier services.","title":"Welcome"},{"location":"#repository-structure","text":"Terraform - Provision the infrastructure PreBuild - Initial server OS setup scripts Ansible - Software configuration Docker - Docker container scripts","title":"Repository structure"},{"location":"#current-status","text":"","title":"Current status"},{"location":"#terraform-phase","text":"Terraform basic configuration (DF) Implemenr variables (DF) Refactoring (DF) Test on other providers (GW) Documentation (DF/GW) Implement post provision scripting (DF)","title":"Terraform Phase:"},{"location":"#build-phase","text":"Networking IPTABLES Praesent sed risus massa Native software NGINX install NGINX base config","title":"Build Phase:"},{"location":"playground/","text":"Markdown playground Code samples Python @requires_authorization ( roles = [ \"ADMIN\" ]) def somefunc ( param1 = '' , param2 = 0 ): r '''A docstring''' if param1 > param2 : # interesting print 'Gre \\' ater' return ( param2 - param1 + 1 + 0b10 l ) or None class SomeClass : pass >>> message = '''interpreter ... prompt''' bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bash #!/bin/bash echo hello Graphs and diagrams Not working yet... see insiders graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; Emoji Tables Method Description GET Fetch resource PUT Update resource DELETE Delete resource Buttons Subscribe to our newsletter Subscribe to our newsletter Send","title":"Markdown playground"},{"location":"playground/#markdown-playground","text":"","title":"Markdown playground"},{"location":"playground/#code-samples","text":"Python @requires_authorization ( roles = [ \"ADMIN\" ]) def somefunc ( param1 = '' , param2 = 0 ): r '''A docstring''' if param1 > param2 : # interesting print 'Gre \\' ater' return ( param2 - param1 + 1 + 0b10 l ) or None class SomeClass : pass >>> message = '''interpreter ... prompt''' bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] bash #!/bin/bash echo hello","title":"Code samples"},{"location":"playground/#graphs-and-diagrams","text":"Not working yet... see insiders graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Graphs and diagrams"},{"location":"playground/#emoji","text":"","title":"Emoji"},{"location":"playground/#tables","text":"Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Tables"},{"location":"playground/#buttons","text":"Subscribe to our newsletter Subscribe to our newsletter Send","title":"Buttons"},{"location":"Ansible/","text":"page 1","title":"page 1"},{"location":"Ansible/#page-1","text":"","title":"page 1"},{"location":"Ansible/index2/","text":"page 2","title":"page 2"},{"location":"Ansible/index2/#page-2","text":"","title":"page 2"},{"location":"Docker/","text":"","title":"Index"},{"location":"PreBuild/","text":"","title":"Index"},{"location":"Terraform/","text":"","title":"Index"}]}